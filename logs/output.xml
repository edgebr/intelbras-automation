<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 7.1 (Python 3.12.6 on win32)" generated="2025-01-17T17:32:38.985828" rpa="false" schemaversion="5">
<suite id="s1" name="1GET user" source="C:\Projetos\EDGE\intelbras-automation\intelbras-automation\test\api\2user\1GET_user.robot">
<kw name="Suite Setup" owner="resource" type="SETUP">
<kw name="Create Session" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:39.424874" level="INFO">Creating Session using : alias=user, url=http://18.228.160.85:5000, headers={'x-api-key': 'c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc'},                     cookies={}, auth=None, timeout=None, proxies=None, verify=False,                     debug=0 </msg>
<arg>user</arg>
<arg>${BASE_URL}</arg>
<arg>headers=${HEADERS}</arg>
<doc>Create Session: create a HTTP session to a server</doc>
<status status="PASS" start="2025-01-17T17:32:39.424874" elapsed="0.000506"/>
</kw>
<status status="PASS" start="2025-01-17T17:32:39.423866" elapsed="0.001514"/>
</kw>
<test id="s1-t1" name="Get Successful Response - user" line="11">
<kw name="Get Users" owner="1GET_user">
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:39.586178" level="INFO">GET Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:39.586178" level="INFO">GET Response : url=http://18.228.160.85:5000/users 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1344', 'ETag': 'W/"540-i5FyStpIaBrFsKtAxspf7QQL3LU"', 'Date': 'Fri, 17 Jan 2025 20:32:41 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=[{"id":"6caa634a-64a7-468c-bc9c-2f99345e2fbb","email":"user@test.com","name":"Usuário","createdAt":"2024-04-04T21:18:20.032Z","updatedAt":"2024-04-04T21:18:20.032Z"},{"id":"oM6ENY7e01hGxdmyjjz3wmYYQ_mKBjsh6_xqiMZirUM","email":null,"name":"Rafael Gomes","createdAt":"2024-10-23T18:35:06.754Z","updatedAt":"2024-10-23T18:35:06.754Z"},{"id":"arutFvFkwZkaSPzdzmhwGAq12EW9HzwppgMG1JVRcQo","email":null,"name":"Elder Cirilo","createdAt":"2024-10-25T21:06:34.071Z","updatedAt":"2024-10-25T21:06:34.071Z"},{"id":"NGZyiDPSy-JUy8r7vPxifPSzNg-wF3xHTKW8VNu8Ec4","email":null,"name":"Luiz Farias","createdAt":"2024-10-28T14:23:42.241Z","updatedAt":"2024-10-28T14:23:42.241Z"},{"id":"3AyQlUi-izP3kBWbHHp1JCX1qUiEk7D2a75C8rcRLFM","email":null,"name":"Lucas Barroso","createdAt":"2024-10-28T15:51:21.513Z","updatedAt":"2024-10-28T15:51:21.513Z"},{"id":"bbysPq1TotUAry9W6B4t4Z0us0CI65GXR0TjYB38Lhs","email":null,"name":"Douglas Lopes","createdAt":"2024-11-04T19:16:16.133Z","updatedAt":"2024-11-04T19:16:16.133Z"},{"id":"j1peJPAE_BoLqtdU8nbJABpR2BtiBIpyzD5TZO8Ymjo","email":null,"name":"Diogo Muller de Miranda","createdAt":"2024-11-05T13:19:20.169Z","updatedAt":"2024-11-05T13:19:20.169Z"},{"id":"nIwZix-S6VRgbEUtNYHXaI1aBF0VCxOn4ww5OrMJ1cY","email":null,"name":"Rafael Oliveira","createdAt":"2024-11-26T15:16:25.283Z","updatedAt":"2024-11-26T15:16:25.283Z"}] 
 </msg>
<msg time="2025-01-17T17:32:39.586178" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>headers=${HEADERS}</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:39.426386" elapsed="0.159792"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-01-17T17:32:39.587185" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:39.587185" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-01-17T17:32:39.426386" elapsed="0.160799"/>
</kw>
<kw name="Validate Status Code 200" owner="1GET_user">
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2025-01-17T17:32:39.589187" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2025-01-17T17:32:39.588185" elapsed="0.002004"/>
</kw>
<kw name="Validate Response Has Content" owner="1GET_user">
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-01-17T17:32:39.592122" level="INFO">Length is 1344.</msg>
<arg>${response.content}</arg>
<arg>Response body should not be empty</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-01-17T17:32:39.591094" elapsed="0.001028"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2025-01-17T17:32:39.590189" elapsed="0.002951"/>
</kw>
<doc>Status 200 - Testa uma requisição bem-sucedida no endpoint GET.</doc>
<tag>positive</tag>
<status status="PASS" start="2025-01-17T17:32:39.426386" elapsed="0.166754"/>
</test>
<test id="s1-t2" name="Get Unauthorized Response - user" line="19">
<kw name="Get Users Without Token" owner="1GET_user">
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:39.743074" level="INFO">GET Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:39.743074" level="INFO">GET Response : url=http://18.228.160.85:5000/users 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '25', 'ETag': 'W/"19-1luTU257I9tvKUXOJotGBQDVDqk"', 'Date': 'Fri, 17 Jan 2025 20:32:41 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"error":"Invalid token"} 
 </msg>
<msg time="2025-01-17T17:32:39.744075" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>expected_status=401</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:39.595775" elapsed="0.148300"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:39.744075" level="INFO">${error_msg} = Invalid token</msg>
<var>${error_msg}</var>
<arg>${response.json()}[error]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:39.744075" elapsed="0.000000"/>
</kw>
<return>
<value>${error_msg}</value>
<status status="PASS" start="2025-01-17T17:32:39.744075" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:39.744075" level="INFO">${response} = Invalid token</msg>
<var>${response}</var>
<status status="PASS" start="2025-01-17T17:32:39.595775" elapsed="0.148300"/>
</kw>
<kw name="Validate Status Code 401" owner="1GET_user">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response}</arg>
<arg>Invalid token</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:39.745582" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2025-01-17T17:32:39.744075" elapsed="0.001507"/>
</kw>
<doc>Status 401 - Testa o comportamento ao não fornecer token de autenticação.</doc>
<tag>negative</tag>
<status status="PASS" start="2025-01-17T17:32:39.595775" elapsed="0.149807"/>
</test>
<test id="s1-t3" name="Get Resource Not Found - user" line="26">
<kw name="Get Non Existent User" owner="1GET_user">
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:39.879297" level="INFO">GET Request : url=http://18.228.160.85:5000/users/999999 
 path_url=/users/999999 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:39.879297" level="INFO">GET Response : url=http://18.228.160.85:5000/users/999999 
 status=404, reason=Not Found 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '75', 'ETag': 'W/"4b-T/va5S7T/GUUGgfsobiuAvOldsA"', 'Date': 'Fri, 17 Jan 2025 20:32:42 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"message":"Cannot GET /users/999999","error":"Not Found","statusCode":404} 
 </msg>
<msg time="2025-01-17T17:32:39.879297" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users/999999</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:39.745582" elapsed="0.133715"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:39.879297" level="INFO">${error_response} = {'message': 'Cannot GET /users/999999', 'error': 'Not Found', 'statusCode': 404}</msg>
<var>${error_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:39.879297" elapsed="0.000000"/>
</kw>
<return>
<value>${error_response}</value>
<status status="PASS" start="2025-01-17T17:32:39.879297" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:39.879297" level="INFO">${response} = {'message': 'Cannot GET /users/999999', 'error': 'Not Found', 'statusCode': 404}</msg>
<var>${response}</var>
<status status="PASS" start="2025-01-17T17:32:39.745582" elapsed="0.133715"/>
</kw>
<kw name="Validate Status Code 404" owner="1GET_user">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response}[error]</arg>
<arg>Not Found</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:39.885390" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response}[message]</arg>
<arg>Cannot GET /users/999999</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:39.885390" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response}[statusCode]</arg>
<arg>${404}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:39.885390" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2025-01-17T17:32:39.885390" elapsed="0.000000"/>
</kw>
<doc>Status 404 - Testa uma requisição para um recurso inexistente.</doc>
<tag>negative</tag>
<status status="PASS" start="2025-01-17T17:32:39.745582" elapsed="0.139808"/>
</test>
<test id="s1-t4" name="Get Bad Request Error - user" line="33">
<kw name="Get users with invalid request error - Status Code 400" owner="1GET_user">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:39.885390" level="INFO">${malformed_json} = {invalid_json</msg>
<var>${malformed_json}</var>
<arg>{invalid_json</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:39.885390" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-01-17T17:32:39.885390" level="INFO">&amp;{headers} = { x-api-key=c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc | Content-Type=application/json }</msg>
<var>&amp;{headers}</var>
<arg>x-api-key=${HEADERS}[x-api-key]</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-01-17T17:32:39.885390" elapsed="0.000000"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:40.025585" level="INFO">POST Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc', 'Content-Type': 'application/json', 'Content-Length': '13'} 
 body={invalid_json 
 </msg>
<msg time="2025-01-17T17:32:40.025585" level="INFO">POST Response : url=http://18.228.160.85:5000/users 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '104', 'ETag': 'W/"68-kblBtzy0JtU08iKv8fj8BDlAe2g"', 'Date': 'Fri, 17 Jan 2025 20:32:42 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"message":"Expected property name or '}' in JSON at position 1","error":"Bad Request","statusCode":400} 
 </msg>
<msg time="2025-01-17T17:32:40.025585" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>headers=${headers}</arg>
<arg>data=${malformed_json}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-01-17T17:32:39.885390" elapsed="0.140195"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:40.025585" level="INFO">${error_response} = {'message': "Expected property name or '}' in JSON at position 1", 'error': 'Bad Request', 'statusCode': 400}</msg>
<var>${error_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:40.025585" elapsed="0.000000"/>
</kw>
<return>
<value>${error_response}</value>
<status status="PASS" start="2025-01-17T17:32:40.025585" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:40.025585" level="INFO">${response} = {'message': "Expected property name or '}' in JSON at position 1", 'error': 'Bad Request', 'statusCode': 400}</msg>
<var>${response}</var>
<status status="PASS" start="2025-01-17T17:32:39.885390" elapsed="0.140195"/>
</kw>
<kw name="Validate Status Code 400" owner="1GET_user">
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response}[error]</arg>
<arg>Bad Request</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:40.025585" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response}[message]</arg>
<arg>Expected property name or '}' in JSON at position 1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:40.025585" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response}[statusCode]</arg>
<arg>${400}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:40.025585" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2025-01-17T17:32:40.025585" elapsed="0.000000"/>
</kw>
<doc>Status 400 - Simula condições para causar solicitação inválida.</doc>
<tag>negative</tag>
<status status="PASS" start="2025-01-17T17:32:39.885390" elapsed="0.140195"/>
</test>
<test id="s1-t5" name="Validate Response Body Schema - user" line="49">
<kw name="Get Users" owner="1GET_user">
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:40.167594" level="INFO">GET Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:40.167594" level="INFO">GET Response : url=http://18.228.160.85:5000/users 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1344', 'ETag': 'W/"540-i5FyStpIaBrFsKtAxspf7QQL3LU"', 'Date': 'Fri, 17 Jan 2025 20:32:42 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=[{"id":"6caa634a-64a7-468c-bc9c-2f99345e2fbb","email":"user@test.com","name":"Usuário","createdAt":"2024-04-04T21:18:20.032Z","updatedAt":"2024-04-04T21:18:20.032Z"},{"id":"oM6ENY7e01hGxdmyjjz3wmYYQ_mKBjsh6_xqiMZirUM","email":null,"name":"Rafael Gomes","createdAt":"2024-10-23T18:35:06.754Z","updatedAt":"2024-10-23T18:35:06.754Z"},{"id":"arutFvFkwZkaSPzdzmhwGAq12EW9HzwppgMG1JVRcQo","email":null,"name":"Elder Cirilo","createdAt":"2024-10-25T21:06:34.071Z","updatedAt":"2024-10-25T21:06:34.071Z"},{"id":"NGZyiDPSy-JUy8r7vPxifPSzNg-wF3xHTKW8VNu8Ec4","email":null,"name":"Luiz Farias","createdAt":"2024-10-28T14:23:42.241Z","updatedAt":"2024-10-28T14:23:42.241Z"},{"id":"3AyQlUi-izP3kBWbHHp1JCX1qUiEk7D2a75C8rcRLFM","email":null,"name":"Lucas Barroso","createdAt":"2024-10-28T15:51:21.513Z","updatedAt":"2024-10-28T15:51:21.513Z"},{"id":"bbysPq1TotUAry9W6B4t4Z0us0CI65GXR0TjYB38Lhs","email":null,"name":"Douglas Lopes","createdAt":"2024-11-04T19:16:16.133Z","updatedAt":"2024-11-04T19:16:16.133Z"},{"id":"j1peJPAE_BoLqtdU8nbJABpR2BtiBIpyzD5TZO8Ymjo","email":null,"name":"Diogo Muller de Miranda","createdAt":"2024-11-05T13:19:20.169Z","updatedAt":"2024-11-05T13:19:20.169Z"},{"id":"nIwZix-S6VRgbEUtNYHXaI1aBF0VCxOn4ww5OrMJ1cY","email":null,"name":"Rafael Oliveira","createdAt":"2024-11-26T15:16:25.283Z","updatedAt":"2024-11-26T15:16:25.283Z"}] 
 </msg>
<msg time="2025-01-17T17:32:40.167594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>headers=${HEADERS}</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:40.025585" elapsed="0.142009"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-01-17T17:32:40.167594" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:40.167594" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-01-17T17:32:40.025585" elapsed="0.142009"/>
</kw>
<kw name="Validate Response Schema" owner="1GET_user">
<kw name="Get File" owner="OperatingSystem">
<msg time="2025-01-17T17:32:40.167594" level="INFO" html="true">Getting file '&lt;a href="file://C:\Projetos\EDGE\intelbras-automation\intelbras-automation\resources\json\test_schema_get_200_user.json"&gt;C:\Projetos\EDGE\intelbras-automation\intelbras-automation\resources\json\test_schema_get_200_user.json&lt;/a&gt;'.</msg>
<msg time="2025-01-17T17:32:40.170326" level="INFO">${json_schema} = {
  "$schema": "http://json-schema.org/draft-04/schema#",
  "type": "array",
  "items": {
    "type": "object",
    "properties": {
      "id": {
        "type": "string"
      },
      "email": {
   ...</msg>
<var>${json_schema}</var>
<arg>${EXECDIR}/resources/json/${schema_file}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="PASS" start="2025-01-17T17:32:40.167594" elapsed="0.002732"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-17T17:32:40.170326" level="INFO">${schema} = {'$schema': 'http://json-schema.org/draft-04/schema#', 'type': 'array', 'items': {'type': 'object', 'properties': {'id': {'type': 'string'}, 'email': {'type': ['string', 'null']}, 'name': {'type': 'st...</msg>
<var>${schema}</var>
<arg>json.loads('''${json_schema}''')</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-17T17:32:40.170326" elapsed="0.000000"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:40.170326" level="INFO">${response_json} = [{'id': '6caa634a-64a7-468c-bc9c-2f99345e2fbb', 'email': 'user@test.com', 'name': 'Usuário', 'createdAt': '2024-04-04T21:18:20.032Z', 'updatedAt': '2024-04-04T21:18:20.032Z'}, {'id': 'oM6ENY7e01hGxdmy...</msg>
<var>${response_json}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:40.170326" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-17T17:32:40.275727" level="INFO">${is_valid} = None</msg>
<var>${is_valid}</var>
<arg>jsonschema.validate(${response_json}, ${schema})</arg>
<arg>modules=jsonschema</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-17T17:32:40.170326" elapsed="0.105401"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${is_valid}</arg>
<arg>${None}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:40.275727" elapsed="0.001008"/>
</kw>
<arg>${response}</arg>
<arg>test_schema_get_200_user.json</arg>
<status status="PASS" start="2025-01-17T17:32:40.167594" elapsed="0.109141"/>
</kw>
<doc>Status 200 - Valida que o corpo da resposta segue o schema esperado.</doc>
<tag>positive</tag>
<tag>schema</tag>
<status status="PASS" start="2025-01-17T17:32:40.025585" elapsed="0.251150"/>
</test>
<test id="s1-t6" name="Get Users Without Required Header - user" line="58">
<kw name="Get Users Without Token" owner="1GET_user">
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:40.416021" level="INFO">GET Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:40.416021" level="INFO">GET Response : url=http://18.228.160.85:5000/users 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '25', 'ETag': 'W/"19-1luTU257I9tvKUXOJotGBQDVDqk"', 'Date': 'Fri, 17 Jan 2025 20:32:42 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"error":"Invalid token"} 
 </msg>
<msg time="2025-01-17T17:32:40.416021" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>expected_status=401</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:40.277744" elapsed="0.138277"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:40.418028" level="INFO">${error_msg} = Invalid token</msg>
<var>${error_msg}</var>
<arg>${response.json()}[error]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:40.417024" elapsed="0.001004"/>
</kw>
<return>
<value>${error_msg}</value>
<status status="PASS" start="2025-01-17T17:32:40.418028" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:40.418028" level="INFO">${response_no_key} = Invalid token</msg>
<var>${response_no_key}</var>
<status status="PASS" start="2025-01-17T17:32:40.277744" elapsed="0.140284"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response_no_key}</arg>
<arg>Invalid token</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:40.419028" elapsed="0.000000"/>
</kw>
<doc>Valida o comportamento da API quando a requisição é feita sem o header x-api-key.
Valida:
- Status code 401
- Mensagem de erro "Invalid token"</doc>
<tag>headers</tag>
<tag>negative</tag>
<status status="PASS" start="2025-01-17T17:32:40.277744" elapsed="0.142284"/>
</test>
<test id="s1-t7" name="Get Users With Invalid Header - user" line="68">
<kw name="Get Users With Invalid Key" owner="1GET_user">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-01-17T17:32:40.421028" level="INFO">&amp;{headers} = { x-api-key=chave_invalida_123 }</msg>
<var>&amp;{headers}</var>
<arg>x-api-key=chave_invalida_123</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-01-17T17:32:40.421028" elapsed="0.000000"/>
</kw>
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:40.563718" level="INFO">GET Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'chave_invalida_123'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:40.563718" level="INFO">GET Response : url=http://18.228.160.85:5000/users 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '25', 'ETag': 'W/"19-1luTU257I9tvKUXOJotGBQDVDqk"', 'Date': 'Fri, 17 Jan 2025 20:32:42 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"error":"Invalid token"} 
 </msg>
<msg time="2025-01-17T17:32:40.564717" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:40.421028" elapsed="0.143689"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:40.566238" level="INFO">${error_msg} = Invalid token</msg>
<var>${error_msg}</var>
<arg>${response.json()}[error]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:40.565227" elapsed="0.001011"/>
</kw>
<return>
<value>${error_msg}</value>
<status status="PASS" start="2025-01-17T17:32:40.566238" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:40.566238" level="INFO">${response_invalid_key} = Invalid token</msg>
<var>${response_invalid_key}</var>
<status status="PASS" start="2025-01-17T17:32:40.421028" elapsed="0.145210"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response_invalid_key}</arg>
<arg>Invalid token</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:40.567240" elapsed="0.000000"/>
</kw>
<doc>Valida o comportamento da API quando a requisição é feita com header x-api-key inválido.
Valida:
- Status code 401
- Mensagem de erro "Invalid token"</doc>
<tag>headers</tag>
<tag>negative</tag>
<status status="PASS" start="2025-01-17T17:32:40.421028" elapsed="0.147226"/>
</test>
<test id="s1-t8" name="Get Users With Valid Header - user" line="78">
<kw name="Get Users" owner="1GET_user">
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:40.715329" level="INFO">GET Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:40.715329" level="INFO">GET Response : url=http://18.228.160.85:5000/users 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1344', 'ETag': 'W/"540-i5FyStpIaBrFsKtAxspf7QQL3LU"', 'Date': 'Fri, 17 Jan 2025 20:32:42 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=[{"id":"6caa634a-64a7-468c-bc9c-2f99345e2fbb","email":"user@test.com","name":"Usuário","createdAt":"2024-04-04T21:18:20.032Z","updatedAt":"2024-04-04T21:18:20.032Z"},{"id":"oM6ENY7e01hGxdmyjjz3wmYYQ_mKBjsh6_xqiMZirUM","email":null,"name":"Rafael Gomes","createdAt":"2024-10-23T18:35:06.754Z","updatedAt":"2024-10-23T18:35:06.754Z"},{"id":"arutFvFkwZkaSPzdzmhwGAq12EW9HzwppgMG1JVRcQo","email":null,"name":"Elder Cirilo","createdAt":"2024-10-25T21:06:34.071Z","updatedAt":"2024-10-25T21:06:34.071Z"},{"id":"NGZyiDPSy-JUy8r7vPxifPSzNg-wF3xHTKW8VNu8Ec4","email":null,"name":"Luiz Farias","createdAt":"2024-10-28T14:23:42.241Z","updatedAt":"2024-10-28T14:23:42.241Z"},{"id":"3AyQlUi-izP3kBWbHHp1JCX1qUiEk7D2a75C8rcRLFM","email":null,"name":"Lucas Barroso","createdAt":"2024-10-28T15:51:21.513Z","updatedAt":"2024-10-28T15:51:21.513Z"},{"id":"bbysPq1TotUAry9W6B4t4Z0us0CI65GXR0TjYB38Lhs","email":null,"name":"Douglas Lopes","createdAt":"2024-11-04T19:16:16.133Z","updatedAt":"2024-11-04T19:16:16.133Z"},{"id":"j1peJPAE_BoLqtdU8nbJABpR2BtiBIpyzD5TZO8Ymjo","email":null,"name":"Diogo Muller de Miranda","createdAt":"2024-11-05T13:19:20.169Z","updatedAt":"2024-11-05T13:19:20.169Z"},{"id":"nIwZix-S6VRgbEUtNYHXaI1aBF0VCxOn4ww5OrMJ1cY","email":null,"name":"Rafael Oliveira","createdAt":"2024-11-26T15:16:25.283Z","updatedAt":"2024-11-26T15:16:25.283Z"}] 
 </msg>
<msg time="2025-01-17T17:32:40.715329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>headers=${HEADERS}</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:40.572785" elapsed="0.142544"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-01-17T17:32:40.715329" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:40.715329" level="INFO">${response_valid_key} = &lt;Response [200]&gt;</msg>
<var>${response_valid_key}</var>
<status status="PASS" start="2025-01-17T17:32:40.571767" elapsed="0.143562"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response_valid_key}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2025-01-17T17:32:40.715329" elapsed="0.000000"/>
</kw>
<kw name="Validate Response Has Content" owner="1GET_user">
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-01-17T17:32:40.715329" level="INFO">Length is 1344.</msg>
<arg>${response.content}</arg>
<arg>Response body should not be empty</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-01-17T17:32:40.715329" elapsed="0.000000"/>
</kw>
<arg>${response_valid_key}</arg>
<status status="PASS" start="2025-01-17T17:32:40.715329" elapsed="0.000000"/>
</kw>
<doc>Valida o comportamento da API quando a requisição é feita com header x-api-key válido.
Valida:
- Status code 200
- Resposta com conteúdo</doc>
<tag>headers</tag>
<tag>positive</tag>
<status status="PASS" start="2025-01-17T17:32:40.570253" elapsed="0.145076"/>
</test>
<test id="s1-t9" name="Validate Success Message - user" line="91">
<kw name="Get Users" owner="1GET_user">
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:40.855413" level="INFO">GET Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:40.855413" level="INFO">GET Response : url=http://18.228.160.85:5000/users 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1344', 'ETag': 'W/"540-i5FyStpIaBrFsKtAxspf7QQL3LU"', 'Date': 'Fri, 17 Jan 2025 20:32:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=[{"id":"6caa634a-64a7-468c-bc9c-2f99345e2fbb","email":"user@test.com","name":"Usuário","createdAt":"2024-04-04T21:18:20.032Z","updatedAt":"2024-04-04T21:18:20.032Z"},{"id":"oM6ENY7e01hGxdmyjjz3wmYYQ_mKBjsh6_xqiMZirUM","email":null,"name":"Rafael Gomes","createdAt":"2024-10-23T18:35:06.754Z","updatedAt":"2024-10-23T18:35:06.754Z"},{"id":"arutFvFkwZkaSPzdzmhwGAq12EW9HzwppgMG1JVRcQo","email":null,"name":"Elder Cirilo","createdAt":"2024-10-25T21:06:34.071Z","updatedAt":"2024-10-25T21:06:34.071Z"},{"id":"NGZyiDPSy-JUy8r7vPxifPSzNg-wF3xHTKW8VNu8Ec4","email":null,"name":"Luiz Farias","createdAt":"2024-10-28T14:23:42.241Z","updatedAt":"2024-10-28T14:23:42.241Z"},{"id":"3AyQlUi-izP3kBWbHHp1JCX1qUiEk7D2a75C8rcRLFM","email":null,"name":"Lucas Barroso","createdAt":"2024-10-28T15:51:21.513Z","updatedAt":"2024-10-28T15:51:21.513Z"},{"id":"bbysPq1TotUAry9W6B4t4Z0us0CI65GXR0TjYB38Lhs","email":null,"name":"Douglas Lopes","createdAt":"2024-11-04T19:16:16.133Z","updatedAt":"2024-11-04T19:16:16.133Z"},{"id":"j1peJPAE_BoLqtdU8nbJABpR2BtiBIpyzD5TZO8Ymjo","email":null,"name":"Diogo Muller de Miranda","createdAt":"2024-11-05T13:19:20.169Z","updatedAt":"2024-11-05T13:19:20.169Z"},{"id":"nIwZix-S6VRgbEUtNYHXaI1aBF0VCxOn4ww5OrMJ1cY","email":null,"name":"Rafael Oliveira","createdAt":"2024-11-26T15:16:25.283Z","updatedAt":"2024-11-26T15:16:25.283Z"}] 
 </msg>
<msg time="2025-01-17T17:32:40.855413" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>headers=${HEADERS}</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:40.715329" elapsed="0.140084"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-01-17T17:32:40.855413" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:40.855413" level="INFO">${success_response} = &lt;Response [200]&gt;</msg>
<var>${success_response}</var>
<status status="PASS" start="2025-01-17T17:32:40.715329" elapsed="0.140084"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${success_response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2025-01-17T17:32:40.858628" elapsed="0.000000"/>
</kw>
<kw name="Validate Response Has Content" owner="1GET_user">
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-01-17T17:32:40.860641" level="INFO">Length is 1344.</msg>
<arg>${response.content}</arg>
<arg>Response body should not be empty</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-01-17T17:32:40.860641" elapsed="0.000000"/>
</kw>
<arg>${success_response}</arg>
<status status="PASS" start="2025-01-17T17:32:40.859639" elapsed="0.001002"/>
</kw>
<doc>Verifica se a mensagem de sucesso está correta.
Valida:
- Status code 200
- Conteúdo da resposta não vazio</doc>
<tag>messages</tag>
<tag>positive</tag>
<status status="PASS" start="2025-01-17T17:32:40.715329" elapsed="0.146332"/>
</test>
<test id="s1-t10" name="Validate Unauthorized Message - user" line="102">
<kw name="Get Users Without Token" owner="1GET_user">
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:40.999479" level="INFO">GET Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:40.999929" level="INFO">GET Response : url=http://18.228.160.85:5000/users 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '25', 'ETag': 'W/"19-1luTU257I9tvKUXOJotGBQDVDqk"', 'Date': 'Fri, 17 Jan 2025 20:32:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"error":"Invalid token"} 
 </msg>
<msg time="2025-01-17T17:32:40.999929" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>expected_status=401</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:40.863648" elapsed="0.136281"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:40.999929" level="INFO">${error_msg} = Invalid token</msg>
<var>${error_msg}</var>
<arg>${response.json()}[error]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:40.999929" elapsed="0.000000"/>
</kw>
<return>
<value>${error_msg}</value>
<status status="PASS" start="2025-01-17T17:32:40.999929" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:40.999929" level="INFO">${unauthorized_msg} = Invalid token</msg>
<var>${unauthorized_msg}</var>
<status status="PASS" start="2025-01-17T17:32:40.863648" elapsed="0.136281"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${unauthorized_msg}</arg>
<arg>Invalid token</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:40.999929" elapsed="0.000000"/>
</kw>
<doc>Verifica se a mensagem de não autorizado está correta.
Valida:
- Status code 401
- Mensagem de erro "Invalid token"</doc>
<tag>messages</tag>
<tag>negative</tag>
<status status="PASS" start="2025-01-17T17:32:40.862659" elapsed="0.137270"/>
</test>
<test id="s1-t11" name="Validate Not Found Message - user" line="112">
<kw name="Get Non Existent User" owner="1GET_user">
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:41.136005" level="INFO">GET Request : url=http://18.228.160.85:5000/users/999999 
 path_url=/users/999999 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:41.136005" level="INFO">GET Response : url=http://18.228.160.85:5000/users/999999 
 status=404, reason=Not Found 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '75', 'ETag': 'W/"4b-T/va5S7T/GUUGgfsobiuAvOldsA"', 'Date': 'Fri, 17 Jan 2025 20:32:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"message":"Cannot GET /users/999999","error":"Not Found","statusCode":404} 
 </msg>
<msg time="2025-01-17T17:32:41.136005" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users/999999</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:41.005480" elapsed="0.130525"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.136005" level="INFO">${error_response} = {'message': 'Cannot GET /users/999999', 'error': 'Not Found', 'statusCode': 404}</msg>
<var>${error_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:41.136005" elapsed="0.000000"/>
</kw>
<return>
<value>${error_response}</value>
<status status="PASS" start="2025-01-17T17:32:41.136005" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:41.136005" level="INFO">${not_found_msg} = {'message': 'Cannot GET /users/999999', 'error': 'Not Found', 'statusCode': 404}</msg>
<var>${not_found_msg}</var>
<status status="PASS" start="2025-01-17T17:32:41.005480" elapsed="0.130525"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${not_found_msg}[error]</arg>
<arg>Not Found</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:41.136005" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${not_found_msg}[message]</arg>
<arg>Cannot GET /users/999999</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:41.136005" elapsed="0.005918"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${not_found_msg}[statusCode]</arg>
<arg>${404}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:41.142311" elapsed="0.000000"/>
</kw>
<doc>Verifica se a mensagem de recurso não encontrado está correta.
Valida:
- Status code 404
- Mensagem de erro específica
- Estrutura da resposta de erro</doc>
<tag>messages</tag>
<tag>negative</tag>
<status status="PASS" start="2025-01-17T17:32:40.999929" elapsed="0.142382"/>
</test>
<test id="s1-t12" name="Validate Bad Request Message - user" line="125">
<kw name="Get users with invalid request error - Status Code 400" owner="1GET_user">
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.144429" level="INFO">${malformed_json} = {invalid_json</msg>
<var>${malformed_json}</var>
<arg>{invalid_json</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:41.144429" elapsed="0.000000"/>
</kw>
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.144429" level="INFO">&amp;{headers} = { x-api-key=c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc | Content-Type=application/json }</msg>
<var>&amp;{headers}</var>
<arg>x-api-key=${HEADERS}[x-api-key]</arg>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-01-17T17:32:41.144429" elapsed="0.000000"/>
</kw>
<kw name="POST" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:41.280835" level="INFO">POST Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc', 'Content-Type': 'application/json', 'Content-Length': '13'} 
 body={invalid_json 
 </msg>
<msg time="2025-01-17T17:32:41.280835" level="INFO">POST Response : url=http://18.228.160.85:5000/users 
 status=400, reason=Bad Request 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '104', 'ETag': 'W/"68-kblBtzy0JtU08iKv8fj8BDlAe2g"', 'Date': 'Fri, 17 Jan 2025 20:32:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"message":"Expected property name or '}' in JSON at position 1","error":"Bad Request","statusCode":400} 
 </msg>
<msg time="2025-01-17T17:32:41.280835" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>headers=${headers}</arg>
<arg>data=${malformed_json}</arg>
<arg>expected_status=400</arg>
<doc>Sends a POST request.</doc>
<status status="PASS" start="2025-01-17T17:32:41.144429" elapsed="0.136406"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.280835" level="INFO">${error_response} = {'message': "Expected property name or '}' in JSON at position 1", 'error': 'Bad Request', 'statusCode': 400}</msg>
<var>${error_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:41.280835" elapsed="0.000000"/>
</kw>
<return>
<value>${error_response}</value>
<status status="PASS" start="2025-01-17T17:32:41.280835" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:41.281829" level="INFO">${bad_request_msg} = {'message': "Expected property name or '}' in JSON at position 1", 'error': 'Bad Request', 'statusCode': 400}</msg>
<var>${bad_request_msg}</var>
<status status="PASS" start="2025-01-17T17:32:41.143407" elapsed="0.138422"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${bad_request_msg}[error]</arg>
<arg>Bad Request</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:41.281829" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${bad_request_msg}[message]</arg>
<arg>Expected property name or '}' in JSON at position 1</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:41.281829" elapsed="0.000000"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${bad_request_msg}[statusCode]</arg>
<arg>${400}</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:41.281829" elapsed="0.001001"/>
</kw>
<doc>Verifica se a mensagem de requisição inválida está correta.
Valida:
- Status code 400
- Mensagem de erro específica
- Estrutura da resposta de erro</doc>
<tag>messages</tag>
<tag>negative</tag>
<status status="PASS" start="2025-01-17T17:32:41.143407" elapsed="0.139423"/>
</test>
<test id="s1-t13" name="Validate Get Users Response Time - user" line="140">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.283815" level="INFO">${start_time} = 1737145961</msg>
<var>${start_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-01-17T17:32:41.283815" elapsed="0.000000"/>
</kw>
<kw name="Get Users" owner="1GET_user">
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:41.427331" level="INFO">GET Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:41.427331" level="INFO">GET Response : url=http://18.228.160.85:5000/users 
 status=200, reason=OK 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '1344', 'ETag': 'W/"540-i5FyStpIaBrFsKtAxspf7QQL3LU"', 'Date': 'Fri, 17 Jan 2025 20:32:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body=[{"id":"6caa634a-64a7-468c-bc9c-2f99345e2fbb","email":"user@test.com","name":"Usuário","createdAt":"2024-04-04T21:18:20.032Z","updatedAt":"2024-04-04T21:18:20.032Z"},{"id":"oM6ENY7e01hGxdmyjjz3wmYYQ_mKBjsh6_xqiMZirUM","email":null,"name":"Rafael Gomes","createdAt":"2024-10-23T18:35:06.754Z","updatedAt":"2024-10-23T18:35:06.754Z"},{"id":"arutFvFkwZkaSPzdzmhwGAq12EW9HzwppgMG1JVRcQo","email":null,"name":"Elder Cirilo","createdAt":"2024-10-25T21:06:34.071Z","updatedAt":"2024-10-25T21:06:34.071Z"},{"id":"NGZyiDPSy-JUy8r7vPxifPSzNg-wF3xHTKW8VNu8Ec4","email":null,"name":"Luiz Farias","createdAt":"2024-10-28T14:23:42.241Z","updatedAt":"2024-10-28T14:23:42.241Z"},{"id":"3AyQlUi-izP3kBWbHHp1JCX1qUiEk7D2a75C8rcRLFM","email":null,"name":"Lucas Barroso","createdAt":"2024-10-28T15:51:21.513Z","updatedAt":"2024-10-28T15:51:21.513Z"},{"id":"bbysPq1TotUAry9W6B4t4Z0us0CI65GXR0TjYB38Lhs","email":null,"name":"Douglas Lopes","createdAt":"2024-11-04T19:16:16.133Z","updatedAt":"2024-11-04T19:16:16.133Z"},{"id":"j1peJPAE_BoLqtdU8nbJABpR2BtiBIpyzD5TZO8Ymjo","email":null,"name":"Diogo Muller de Miranda","createdAt":"2024-11-05T13:19:20.169Z","updatedAt":"2024-11-05T13:19:20.169Z"},{"id":"nIwZix-S6VRgbEUtNYHXaI1aBF0VCxOn4ww5OrMJ1cY","email":null,"name":"Rafael Oliveira","createdAt":"2024-11-26T15:16:25.283Z","updatedAt":"2024-11-26T15:16:25.283Z"}] 
 </msg>
<msg time="2025-01-17T17:32:41.428329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>headers=${HEADERS}</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:41.285207" elapsed="0.143122"/>
</kw>
<return>
<value>${response}</value>
<status status="PASS" start="2025-01-17T17:32:41.428329" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:41.428329" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<var>${response}</var>
<status status="PASS" start="2025-01-17T17:32:41.285207" elapsed="0.143122"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.429327" level="INFO">${end_time} = 1737145961</msg>
<var>${end_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-01-17T17:32:41.429327" elapsed="0.000000"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.430328" level="INFO">${response_time} = 0</msg>
<var>${response_time}</var>
<arg>${end_time} - ${start_time}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-17T17:32:41.429327" elapsed="0.001001"/>
</kw>
<kw name="Validate Response Time" owner="1GET_user">
<kw name="Should Be True" owner="BuiltIn">
<arg>${response_time} &lt; ${sla_limit}</arg>
<arg>Response time of ${response_time} seconds exceeded the SLA of ${sla_limit} second(s)</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-01-17T17:32:41.431328" elapsed="0.000000"/>
</kw>
<arg>${response_time}</arg>
<doc>Valida se o tempo de resposta está dentro do limite do SLA.
Args:
    response_time: Tempo de resposta em segundos
    sla_limit: Limite máximo aceitável em segundos (default: 1)</doc>
<status status="PASS" start="2025-01-17T17:32:41.430328" elapsed="0.001000"/>
</kw>
<kw name="Status Should Be" owner="RequestsLibrary">
<arg>200</arg>
<arg>${response}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<status status="PASS" start="2025-01-17T17:32:41.432339" elapsed="0.000000"/>
</kw>
<kw name="Validate Response Has Content" owner="1GET_user">
<kw name="Should Not Be Empty" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.433340" level="INFO">Length is 1344.</msg>
<arg>${response.content}</arg>
<arg>Response body should not be empty</arg>
<doc>Verifies that the given item is not empty.</doc>
<status status="PASS" start="2025-01-17T17:32:41.433340" elapsed="0.000000"/>
</kw>
<arg>${response}</arg>
<status status="PASS" start="2025-01-17T17:32:41.432339" elapsed="0.001001"/>
</kw>
<doc>Verifica se o tempo de resposta da listagem de usuários está dentro do SLA.
Valida:
- Tempo de resposta menor que 1 segundo
- Status code 200
- Resposta com conteúdo válido</doc>
<tag>performance</tag>
<tag>positive</tag>
<status status="PASS" start="2025-01-17T17:32:41.283815" elapsed="0.150510"/>
</test>
<test id="s1-t14" name="Validate Get Single User Response Time - user" line="157">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.435838" level="INFO">${start_time} = 1737145961</msg>
<var>${start_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-01-17T17:32:41.435838" elapsed="0.000000"/>
</kw>
<kw name="Get Non Existent User" owner="1GET_user">
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:41.581631" level="INFO">GET Request : url=http://18.228.160.85:5000/users/999999 
 path_url=/users/999999 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'c91f3812554f58600bdecffa4233f8ef397a6c3e42d00489e1b4ed168fb0cbfc'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:41.582616" level="INFO">GET Response : url=http://18.228.160.85:5000/users/999999 
 status=404, reason=Not Found 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '75', 'ETag': 'W/"4b-T/va5S7T/GUUGgfsobiuAvOldsA"', 'Date': 'Fri, 17 Jan 2025 20:32:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"message":"Cannot GET /users/999999","error":"Not Found","statusCode":404} 
 </msg>
<msg time="2025-01-17T17:32:41.582616" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users/999999</arg>
<arg>headers=${HEADERS}</arg>
<arg>expected_status=404</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:41.436854" elapsed="0.145762"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.583617" level="INFO">${error_response} = {'message': 'Cannot GET /users/999999', 'error': 'Not Found', 'statusCode': 404}</msg>
<var>${error_response}</var>
<arg>${response.json()}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:41.582616" elapsed="0.001001"/>
</kw>
<return>
<value>${error_response}</value>
<status status="PASS" start="2025-01-17T17:32:41.583617" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:41.583617" level="INFO">${response} = {'message': 'Cannot GET /users/999999', 'error': 'Not Found', 'statusCode': 404}</msg>
<var>${response}</var>
<status status="PASS" start="2025-01-17T17:32:41.436854" elapsed="0.146763"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.585129" level="INFO">${end_time} = 1737145961</msg>
<var>${end_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-01-17T17:32:41.583617" elapsed="0.001512"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.586139" level="INFO">${response_time} = 0</msg>
<var>${response_time}</var>
<arg>${end_time} - ${start_time}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-17T17:32:41.585129" elapsed="0.001487"/>
</kw>
<kw name="Validate Response Time" owner="1GET_user">
<kw name="Should Be True" owner="BuiltIn">
<arg>${response_time} &lt; ${sla_limit}</arg>
<arg>Response time of ${response_time} seconds exceeded the SLA of ${sla_limit} second(s)</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-01-17T17:32:41.586616" elapsed="0.001024"/>
</kw>
<arg>${response_time}</arg>
<arg>0.8</arg>
<doc>Valida se o tempo de resposta está dentro do limite do SLA.
Args:
    response_time: Tempo de resposta em segundos
    sla_limit: Limite máximo aceitável em segundos (default: 1)</doc>
<status status="PASS" start="2025-01-17T17:32:41.586616" elapsed="0.001024"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response}[error]</arg>
<arg>Not Found</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:41.587640" elapsed="0.000974"/>
</kw>
<doc>Verifica se o tempo de resposta ao buscar um usuário específico está dentro do SLA.
Valida:
- Tempo de resposta menor que 0.8 segundos
- Status code 404 (usando ID inexistente para teste)</doc>
<tag>negative</tag>
<tag>performance</tag>
<status status="PASS" start="2025-01-17T17:32:41.435327" elapsed="0.153287"/>
</test>
<test id="s1-t15" name="Validate Invalid Token Response Time - user" line="172">
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.589610" level="INFO">${start_time} = 1737145961</msg>
<var>${start_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-01-17T17:32:41.589610" elapsed="0.000000"/>
</kw>
<kw name="Get Users With Invalid Key" owner="1GET_user">
<kw name="Create Dictionary" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.590631" level="INFO">&amp;{headers} = { x-api-key=chave_invalida_123 }</msg>
<var>&amp;{headers}</var>
<arg>x-api-key=chave_invalida_123</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<status status="PASS" start="2025-01-17T17:32:41.590631" elapsed="0.000000"/>
</kw>
<kw name="GET" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:41.730466" level="INFO">GET Request : url=http://18.228.160.85:5000/users 
 path_url=/users 
 headers={'User-Agent': 'python-requests/2.32.3', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'x-api-key': 'chave_invalida_123'} 
 body=None 
 </msg>
<msg time="2025-01-17T17:32:41.730466" level="INFO">GET Response : url=http://18.228.160.85:5000/users 
 status=401, reason=Unauthorized 
 headers={'X-Powered-By': 'Express', 'Access-Control-Allow-Origin': 'http://18.228.160.85:5173', 'Vary': 'Origin', 'Access-Control-Allow-Credentials': 'true', 'Content-Type': 'application/json; charset=utf-8', 'Content-Length': '25', 'ETag': 'W/"19-1luTU257I9tvKUXOJotGBQDVDqk"', 'Date': 'Fri, 17 Jan 2025 20:32:43 GMT', 'Connection': 'keep-alive', 'Keep-Alive': 'timeout=5'} 
 body={"error":"Invalid token"} 
 </msg>
<msg time="2025-01-17T17:32:41.730466" level="INFO">${response} = &lt;Response [401]&gt;</msg>
<var>${response}</var>
<arg>${BASE_URL}/users</arg>
<arg>headers=${headers}</arg>
<arg>expected_status=401</arg>
<doc>Sends a GET request.</doc>
<status status="PASS" start="2025-01-17T17:32:41.590631" elapsed="0.139835"/>
</kw>
<kw name="Set Variable" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.731467" level="INFO">${error_msg} = Invalid token</msg>
<var>${error_msg}</var>
<arg>${response.json()}[error]</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="PASS" start="2025-01-17T17:32:41.730466" elapsed="0.001001"/>
</kw>
<return>
<value>${error_msg}</value>
<status status="PASS" start="2025-01-17T17:32:41.731467" elapsed="0.000000"/>
</return>
<msg time="2025-01-17T17:32:41.731467" level="INFO">${response} = Invalid token</msg>
<var>${response}</var>
<status status="PASS" start="2025-01-17T17:32:41.590631" elapsed="0.140836"/>
</kw>
<kw name="Get Time" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.732464" level="INFO">${end_time} = 1737145961</msg>
<var>${end_time}</var>
<arg>epoch</arg>
<doc>Returns the given time in the requested format.</doc>
<status status="PASS" start="2025-01-17T17:32:41.731467" elapsed="0.000997"/>
</kw>
<kw name="Evaluate" owner="BuiltIn">
<msg time="2025-01-17T17:32:41.732464" level="INFO">${response_time} = 0</msg>
<var>${response_time}</var>
<arg>${end_time} - ${start_time}</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="PASS" start="2025-01-17T17:32:41.732464" elapsed="0.000000"/>
</kw>
<kw name="Validate Response Time" owner="1GET_user">
<kw name="Should Be True" owner="BuiltIn">
<arg>${response_time} &lt; ${sla_limit}</arg>
<arg>Response time of ${response_time} seconds exceeded the SLA of ${sla_limit} second(s)</arg>
<doc>Fails if the given condition is not true.</doc>
<status status="PASS" start="2025-01-17T17:32:41.733463" elapsed="0.001004"/>
</kw>
<arg>${response_time}</arg>
<arg>0.5</arg>
<doc>Valida se o tempo de resposta está dentro do limite do SLA.
Args:
    response_time: Tempo de resposta em segundos
    sla_limit: Limite máximo aceitável em segundos (default: 1)</doc>
<status status="PASS" start="2025-01-17T17:32:41.733463" elapsed="0.001004"/>
</kw>
<kw name="Should Be Equal" owner="BuiltIn">
<arg>${response}</arg>
<arg>Invalid token</arg>
<doc>Fails if the given objects are unequal.</doc>
<status status="PASS" start="2025-01-17T17:32:41.734467" elapsed="0.000000"/>
</kw>
<doc>Verifica se o tempo de resposta com token inválido está dentro do SLA.
Valida:
- Tempo de resposta menor que 0.5 segundos
- Mensagem de erro apropriada</doc>
<tag>negative</tag>
<tag>performance</tag>
<status status="PASS" start="2025-01-17T17:32:41.589610" elapsed="0.145854"/>
</test>
<kw name="Suite Teardown" owner="resource" type="TEARDOWN">
<kw name="Delete All Sessions" owner="RequestsLibrary">
<msg time="2025-01-17T17:32:41.736549" level="INFO">Deleting All Sessions</msg>
<doc>Removes all the session objects</doc>
<status status="PASS" start="2025-01-17T17:32:41.736549" elapsed="0.000000"/>
</kw>
<status status="PASS" start="2025-01-17T17:32:41.735464" elapsed="0.001085"/>
</kw>
<status status="PASS" start="2025-01-17T17:32:38.985828" elapsed="2.750721"/>
</suite>
<statistics>
<total>
<stat pass="15" fail="0" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="3" fail="0" skip="0">headers</stat>
<stat pass="4" fail="0" skip="0">messages</stat>
<stat pass="10" fail="0" skip="0">negative</stat>
<stat pass="3" fail="0" skip="0">performance</stat>
<stat pass="5" fail="0" skip="0">positive</stat>
<stat pass="1" fail="0" skip="0">schema</stat>
</tag>
<suite>
<stat pass="15" fail="0" skip="0" id="s1" name="1GET user">1GET user</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
